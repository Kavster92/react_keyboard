{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressKey","handlerKeyPres","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,SAAU,IAFd,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,SAAUE,EAAME,OAdpC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kBAV/C,oBAiBE,WACE,IAAQD,EAAaO,KAAKR,MAAlBC,SAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAQ,mCACuBA,EADvB,KAEL,kCAzBd,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.62f1b147.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlerKeyPres);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlerKeyPres);\n  }\n\n  handlerKeyPres = (event: KeyboardEvent) => {\n    this.setState({ pressKey: event.key });\n  };\n\n  render() {\n    const { pressKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressKey\n            ? `The last pressed key is [${pressKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}